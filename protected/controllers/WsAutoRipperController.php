<?php

class WsAutoRipperController extends Controller
{

	public function actions()
	{
		return array(
		            'wsdl'=>array(
		                'class'=>'CWebServiceAction',
					'classMap'=>array(
			                    'GetNameAndPwdResponse'=>'GetNameAndPwdResponse',
		),
		),
		);
	}
	
	
	/**
	* Set current ripper state
	* @param integer id (auto_ripper Id)
	* @param integer idState
	* @param string description
	* @return bool success
	* @soap
	*/
	public function setState($id, $idState, $description)
	{
		$modelAutoRipper = AutoRipper::model()->findByPk($id);
		
		if(isset($modelAutoRipper))
		{
			try {
							
				$modelAutoRipper->Id_auto_ripper_state = $idState;
				$modelAutoRipper->save();
				
				$autoRipperState = new AutoRipperAutoRipperState();
				$autoRipperState->Id_auto_ripper = $id;
				$autoRipperState->Id_auto_ripper_state = $idState;
				$autoRipperState->description = $description;
				$autoRipperState->save();
				
				return true;
			} catch (Exception $e) {
				return false;
			}
		}
		return false;
	}
	
	/**
	* Start ripper process
	* @param string idDisc	
	* @return integer id (auto_ripper table autogenerated Id)
	* @soap
	*/
	public function ripperStart($idDisc)
	{
		$autoRipperId = 0;
		if(empty($idDisc))
		{
			$modelAutoRipper = new AutoRipper();
			$modelAutoRipper->Id_disc = $idDisc;
			$modelAutoRipper->Id_auto_ripper_state = 1; //Iniciando
			$modelAutoRipper->save();
			
			$autoRipperId = $modelAutoRipper->Id;
			
			$autoRipperState = new AutoRipperAutoRipperState();
			$autoRipperState->Id_auto_ripper = $autoRipperId;
			$autoRipperState->Id_auto_ripper_state = 1;			
			$autoRipperState->save();
			
		}
		
		return $autoRipperId;
	
	}
	
	/**
	* Set percentage
	* @param integer id
	* @param integer percentage
	* @return bool success
	* @soap
	*/
	public function setPercentage($id, $percentage)
	{
		$modelAutoRipper = AutoRipper::model()->findByPk($id);
		
		if(isset($modelAutoRipper))
		{
			try {

				$modelAutoRipper->percentage = $percentage;
				$modelAutoRipper->save();
				
				return true;
			} catch (Exception $e) {
				return false;
			}
		}
		return false;
	
	}

	/**
	* Get name and password by id
	* @param integer id
	* @return GetNameAndPwdResponse response (object with name and passowrd attributes)
	* @soap
	*/
	public function getNameAndPwd($id)
	{
		$response = null;
		
		$modelAutoRipper = AutoRipper::model()->findByPk($id);
	
		if(isset($modelAutoRipper))
		{
			$response = new GetNameAndPwdResponse();
			
			if(empty($modelAutoRipper->name) && empty($modelAutoRipper->password))
			{
				$modelAutoRipper->name = uniqid();
					
				//dejo la clave solo de 9 caracteres xq sino el sabnzb no descomprime el .rar
				$pwd = uniqid();
				$modelAutoRipper->password = substr($pwd, -9);
				
				if($modelAutoRipper->save())
				{
					$response->name = $modelAutoRipper->name;
					$response->password = $modelAutoRipper->password;
				}
				
			}	
			else
			{
				$response->name = $modelAutoRipper->name;
				$response->password = $modelAutoRipper->password;
			}		
		}		
		
		return $response;
	}
	
}
